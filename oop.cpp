#include <iostream>
#include <string>
using namespace std;

//класс для описания чайника
class чайник {
public:
  string  марка;
  int  мощность;
  double  объем;
  bool  включен;
  bool  кипит;

  void включить() {
   включен = true;
    cout << "чайник включен" << endl;
  }

  void выключить() {
    включен = false;
    cout << "чайник выключен" << endl;
  }

  void нагреть() {
    if (включен) {
      кипит = true;
      cout << "вода закипела" << endl;
    } else {
      cout << "чайник не включен" << endl;
    }
  }
  void налить_воду() {
    cout << "вода налита в чайник" << endl;
  }

  void описать() {
    cout << "чайник марки " << марка << " с мощностью " << мощность << " вт, объемом " << объем << " литров" << endl;
  }
};
//класс для описания книги
class Книга {
public:
  string  название;
  string  автор;
  int  количество_страниц;
  bool  открыта;
  int  текущая_страница;

  void открыть() {
    открыта = true;
    cout << "книга открыта" << endl;
  }
  void закрыть() {
    открыта = false;
    cout << "Книга закрыта" << endl;
  }

  void перевернуть_страницу() {
    if (открыта) {
      текущая_страница++;
      cout << "Перевернута страница. Текущая страница: " << текущая_страница << endl;
    } else {
   cout << "Книга закрыта" << endl;
    }
  }

  void описать() {
    cout << "Книга \"" << название << "\" автора " << автор << ", " << количество_страниц << " страниц." << endl;
  }
};
//класс для описания телефона
class Телефон {
public:
  string  модель;
  string  оператор;
  int  батарея;
  bool  включен;
  bool  звонок;

  void включить() {
    включен = true;
    cout << "Телефон включен." << endl;
  }

  void выключить() {
  включен = false;
    cout << "Телефон выключен." << endl;
  }

  void позвонить() {
    if (включен) {
      звонок = true;
      cout << "Идет звонок." << endl;
    } else {
      cout << "Телефон выключен." << endl;
    }
  }

  void описать() {
    cout << "Телефон модели " << модель << " оператора " << оператор << ", уровень заряда батареи: " << батарея << "%." << endl;
  }
};
//класс для описания ручки
class ГелиеваяРучка {
public:
  string  цвет_чернил;
  string  марка;
  bool  открыта;
  bool  чернила;
  int  остаток_чернил;

  void открыть() {
    открыта = true;
  cout << "Ручка открыта" << endl;
  }

  void закрыть() {
    открыта = false;
    cout << "Ручка закрыта" << endl;
  }

  void писать() {
    if (открыта && чернила) {
      остаток_чернил--;
      cout << "Пишем" << endl;
    } else {
      cout << "Ручка не открыта или чернила закончились" << endl;
    }
  }

  void описать() {
    cout << "ручка марки " << марка << ",цвет чернил: " << цвет_чернил << ",остаток чернил: " << остаток_чернил << "%" << endl;
  }
};
//класс для описания купюры
class Купюра {
public:
  int  номинал;
  string  валюта;
  bool  целая;
  bool  в_обращении;

  void описать() {
    cout << "Купюра номиналом " << номинал << " " << валюта << "." << endl;
  }
};

int main() {
//создаем объекты
  Чайник чайник;
  Книга книга;
  Телефон телефон;
  ГелиеваяРучка ручка;
  Купюра купюра;

//настройка состояния объектов
  чайник.марка = "Bosch";
  чайник.мощность = 2200;
  чайник.объем = 1.5;
  чайник.включен = false;
  чайник.кипит = false;

  книга.название = "Война и мир";
  книга.автор = "Лев Толстой";
  книга.количество_страниц = 1225;
  книга.открыта = false;
  книга.текущая_страница = 0;

  телефон.модель = "iPhone 13 Pro";
  телефон.оператор = "Киевстар";
  телефон.батарея = 80;
  телефон.включен = true;
  телефон.звонок = false;

  ручка.цвет_чернил = "синий";
  ручка.марка = "Bic";
  ручка.открыта = false;
  ручка.чернила = true;
  ручка.остаток_чернил = 100;

  купюра.номинал = 500;
  купюра.валюта = "гривны";
  купюра.целая = true;
  купюра.в_обращении = true;

//вызов методов
  чайник.включить();
  чайник.нагреть();
  чайник.описать();
  cout << endl;

  книга.открыть();
  книга.перевернуть_страницу();
  книга.описать();
  cout << endl;

  телефон.позвонить();
  телефон.описать();
  cout << endl;

  ручка.открыть();
  ручка.писать();
  ручка.описать();
  cout << endl;

  купюра.описать();

  return 0;
}